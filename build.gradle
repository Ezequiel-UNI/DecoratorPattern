/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

    //para poder publicar paquetes en github
    id 'maven-publish'
}

version = '0.0'

tasks.withType(JavaCompile) {
    //A�adir la opci�n Xlint
    options.deprecation = true
    options.encoding = 'ISO-8859-1'
}
tasks.withType(Javadoc){

    description = "Genera la documentaci�n"
    //indicar que la codificaci�n es ISO
    options.encoding = 'ISO-8859-1'
    options.charSet = 'ISO-8859-1'
    options.author = true
    options.version = true
    options.use = true
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.footer = "MIT-FS: Curso 2020/21"
    title = "API ShopManager"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit5 test framework

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	  //A�ado para usar mockito
    testCompile "org.mockito:mockito-core:2.+"
    testCompile "org.mockito:mockito-junit-jupiter:2.+"

}

//Para publicar paquetes en github
//group = 'shopmanager'
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Ezequiel-UNI/shopmanager")
            credentials {
            //las propiedades gpr.user y gpr.key est�n configuradas en gradle.properties en el raiz del proyecto, y se a�ade a .gitignore para que no se suban
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
        }
    }
    publications {
        gpr(MavenPublication) {
         //Del tutorial https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven

            groupId = 'decoratorpattern.samples'
            artifactId = 'shopmanager'
            version = '0.0'

            from components.java
        }

    }
}
